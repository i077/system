env:
  CIRRUS_SHELL: bash -il
  CACHIX_AUTH_TOKEN: ENCRYPTED[!5b9226401f61dbae39295591ce5115a7f499fa0c24fd6e8a46df6188eda5e03de499c8adfea6a86dd4c0e284e107f3e0!]
  CACHIX_NAME: i077
  DARWIN_BUILD_IMAGE: ghcr.io/cirruslabs/macos-sonoma-base:latest
  LINUX_BUILD_IMAGE: nixpkgs/cachix-flakes:latest
  NIX_BUILD_FLAGS: -j auto --accept-flake-config

build_template: &BUILD_TEMPLATE
  only_if: $CIRRUS_BRANCH == $CIRRUS_DEFAULT_BRANCH || $CIRRUS_TAG != '' || $CIRRUS_PR != '' || $CIRRUS_BUILD_SOURCE == ""
  name: build_${CIRRUS_OS}_${ARCH}
  timeout_in: 120m
  use_cachix_script: cachix use $CACHIX_NAME
  build_script: cachix watch-exec $CACHIX_NAME -- nix build $NIX_BUILD_FLAGS $OUTPUTS --system ${ARCH}-${CIRRUS_OS} --show-trace
  print_diff_script: |
    if [ $CIRRUS_BRANCH = 'update_flake_lock_action' ]; then
      for out in $OUTPUTS; do
        nix build nixpkgs#nvd
        nix build $NIX_BUILD_FLAGS $out -o result --quiet;
        nix build $NIX_BUILD_FLAGS github:i077/system#$(echo $out | cut -d# -f2) -o result-old --quiet;
        echo "===== $out"
        nix run nixpkgs#nvd -- --color always diff ./result-old ./result;
        echo -e "=====\n"
      done
    fi

build_darwin_profiles_task:
  macos_instance:
    image: $DARWIN_BUILD_IMAGE
  matrix:
    - env:
        ARCH: aarch64
        OUTPUTS:
          - .#darwinConfigurations.Venusaur-ci.config.system.build.toplevel
          - .#darwinConfigurations.workmac-ci.config.system.build.toplevel
          - .#devShells.aarch64-darwin.default
  install_rosetta_script: softwareupdate --install-rosetta --agree-to-license
  install_nix_script: curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix | sh -s -- install --no-confirm
  install_cachix_script: nix profile install --impure github:nixos/nixpkgs/nixpkgs-unstable#cachix
  trust_user_script: echo "trusted-users = root admin" | sudo tee -a /etc/nix/nix.conf && sudo pkill nix-daemon
  <<: *BUILD_TEMPLATE

build_nixos_profiles_task:
  matrix:
    - arm_container:
        image: $LINUX_BUILD_IMAGE
        cpu: 4
        memory: 12G
      env:
        ARCH: aarch64
        OUTPUTS:
          - .#deploy.nodes.cubone.profiles.system.path
    - container:
        image: $LINUX_BUILD_IMAGE
        cpu: 4
        memory: 12G
      env:
        ARCH: x86_64
        OUTPUTS:
          - .#deploy.nodes.combee.profiles.system.path
  <<: *BUILD_TEMPLATE
