name: Bisect nixpkgs input

on:
  workflow_dispatch:

jobs:
  bisect:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        hostname: [giratina, dialga]
    steps:
    - uses: actions/checkout@v2.4.0
      with:
        path: system
    - name: Checkout nixpkgs
      uses: actions/checkout@v2.4.0
      with:
        repository: NixOS/nixpkgs
        fetch-depth: 0
        path: nixpkgs
    - name: Cleanup disk
      uses: curoky/cleanup-disk-action@v2.0
    - uses: cachix/install-nix-action@v14
      with:
        install_url: https://github.com/numtide/nix-flakes-installer/releases/download/nix-2.4pre20201221_9fab14a/install
        extra_nix_config: |
          experimental-features = nix-command flakes
    - name: Configure Cachix
      uses: cachix/cachix-action@v10
      with:
        name: i077
        # No need to push useless builds to the cache
        skipPush: true
    - name: Bisect nixpkgs flake input
      run: |
        # Assumes that HEAD points to a flake update commit and extract nixpkgs refs
        GOOD_REF=$(git -C system log --format=%B -1 | grep "'nixpkgs'" | sed "s/\* Updated '.*': '.*\([0-9a-f]\{40\}\)' -> '.*[0-9a-f]\{40\}'/\1/")
        BAD_REF=$(git -C system log --format=%B -1 | grep "'nixpkgs'" | sed "s/\* Updated '.*': '.*[0-9a-f]\{40\}' -> '.*\([0-9a-f]\{40\}\)'/\1/")
        git -C nixpkgs bisect start
        git -C nixpkgs bisect good $GOOD_REF
        git -C nixpkgs bisect bad $BAD_REF
        # Automate git bisect with nix build command
        git -C nixpkgs bisect run nix build $GITHUB_WORKSPACE/system#nixosConfigurations.${{ matrix.hostname }}.config.system.build.toplevel --override-input nixpkgs $GITHUB_WORKSPACE/nixpkgs
